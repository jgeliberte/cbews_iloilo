# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/ # at 5 a.m every week with:
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

@reboot guake &

@monthly ~/anaconda2/bin/python ~/Desktop/updews-pycodes/Analysis/raingauge.py
10,40 * * * * ~/anaconda2/bin/python ~/Desktop/updews-pycodes/Analysis/updateRainfallNOAH.py

11,41 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python AllRainfall.py # Dynaslope Monitoring Scripts
12,42 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python rainfallnotif.py
3-59/5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python audioalert.py
25,55 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Data\ Analysis; ~/anaconda2/bin/python MonitoringOutputCleanup.py
*/5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python removeinv.py
 
11-29/5,41-59/5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python PublicAlert.py > ~/scriptlogs/PublicAlert.txt 2>&1
# 41-59/5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python PublicAlert.py > ~/scriptlogs/PublicAlert.txt 2>&1
# */5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Analysis; ~/anaconda2/bin/python PublicAlert.py
# */5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Data\ Analysis/GroundAlert; ~/anaconda2/bin/python GenerateGroundAlert.py
# */5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Data\ Analysis/GroundAlert; ~/anaconda2/bin/python GenerateGroundAlertWithTrending.py
# */5 * * * * cd /home/dynaslope/Desktop/updews-pycodes/Data\ Analysis/GroundAlert; ~/anaconda2/bin/python GenerateGroundAlertWithTrendingNewAlerts.py


# */10 * * * * sshpass -p "raspberry" scp /home/dynaslope/Desktop/query_latest_report_output.txt pi@192.168.150.127:/home/pi/monitoringoutputs
2-59/5 * * * * sshpass -p "raspberry" scp /home/dynaslope/Desktop/updews-pycodes/Analysis/PublicAlert.txt pi@192.168.150.127:/home/pi/monitoringoutputs # for viewing outputs
* * * * * sshpass -p "raspberry" scp /home/dynaslope/Desktop/updews-pycodes/Analysis/PublicAlert.json pi@192.168.150.127:/home/pi/monitoringoutputs
* * * * * sshpass -p "landslide" scp /home/dynaslope/Desktop/updews-pycodes/Analysis/PublicAlert.json dewsl@192.168.150.128:/home/dewsl/Documents/monitoringoutput
# * * * * * sshpass -p "raspberry" scp /home/dynaslope/Desktop/MonitoringOutput/serverlogs/datalogger_health.txt pi@192.168.150.127:/home/pi/monitoringoutputs
* * * * * sshpass -p "asdfjkl;" scp /home/dynaslope/Desktop/updews-pycodes/Analysis/PublicAlert.json ubuntu@swatqa:/var/www/html/temp/data

*/2 * * * * scp -i /keyPair/senslopeInstance.pem /home/dynaslope/Desktop/updews-pycodes/Analysis/PublicAlert.json ubuntu@www.dewslandslide.com:/var/www/html/temp/data/ # # Copy PublicAlert.json to Dewslandslide.com (increased to every 2 min from every 5 min)

#PANB: This has been commented out for the meantime to test the GSM integration with masync
# @reboot cd ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/sqlBased; ~/anaconda2/bin/python gen_sql.py & # SQL creator scripts
@reboot cd ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/sqlBasedGndMeas; ~/anaconda2/bin/python gen_sql.py &
@reboot cd ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/sqlBasedSOMS; ~/anaconda2/bin/python gen_sql.py &
@reboot cd ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/sqlBasedWS; ~/anaconda2/bin/python gen_sql.py &
@reboot sleep 10 && screen -S Masync -d -m python /home/dynaslope/masynckaiser/client/bin/masynckaiser-client.py
##Uploader Scripts

@reboot /bin/sh ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/uploadScripts/iNotifyscpToAmazon.sh > /dev/null # Run Real-time uploader when PC is booted up

5 12,19 * * * pkill -f iNotifyscpToAmazon.sh; /bin/sh ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/uploadScripts/iNotifyscpToAmazon.sh > /dev/null & # Restart the Real-time script every 12:05 and 19:05 due to PHIVOLCS automated router restart

15,35,55 * * * * /bin/sh ~/Desktop/updews-pycodes/Stable\ Versions/senslope_to_aws/uploadScripts/scpToAmazon.sh > log.txt # Contingency Uploader in case the real-time uploader crashes

10,25,40,55 * * * * /bin/sh  /home/dynsalope/ivy/dynaslope_updater.sh # IJD: Substitute masync uploader for rainfall data for the meantime


##Web Socket Contingency Scripts
# @reboot ~/anaconda2/bin/python /home/dynaslope/Prado/updews-pycodes/Experimental\ Versions/pythonSockets/ws-client-receiver-reconnect-simple.py # WebSocket Continuous Listener
10 * * * * ~/anaconda2/bin/python /home/dynaslope/Prado/updews-pycodes/Experimental\ Versions/pythonSockets/ws-client-send-smsinbox.py # Send smsinbox messages to web socket server

#Process SMS Messages
# * * * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/processmessagesfromdb.py > ~/Desktop/MonitoringOutput/processmessagesfromdb_log.txt 2>&1 # proc
# * * * * * sleep 30 && ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/processmessagesfromdb.py > ~/Desktop/MonitoringOutput/processmessagesfromdb_log.txt 2>&1 # proc
# * * * * * ~/anaconda2/bin/python ~/sandboxreader/processmessagesfromdb.py > ~/sandboxreader/pmfdb.txt 2>&1 # proc
# */2 * * * * ~/anaconda2/bin/python ~/Desktop/RPI\ Server/query_latest_report.py > ~/Desktop/query_latest_report_output.txt 2>&1
# 2-59/10 * * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/dlhealth.py otherstat$
# 2-59/10 * * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/dlhealth.py loggerstatus
2-59/5 * * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/alertmessaging.py -cs > ~/Desktop/MonitoringOutput/checkalert.txt 2>&1
*/2 * * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/alertgenexec.py > ~/Desktop/MonitoringOutput/alertgenexec_log.txt 2>&1
0 8,20 * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/alertmessaging.py -u > ~/Desktop/MonitoringOutput/updateshifttags.txt 2>&1

0 6,14,22 * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/queryserverinfo.py sendregularstatusupdates > ~/scriptlogs/sendregularstatusoutput.txt 2>&1 # Regular SMS alerts
0 20 * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/queryserverinfo.py sendservermonreminder > ~/scriptlogs/sendservermonreminderoutput.txt 2>&1
0 8,20 * * * ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/queryserverinfo.py sendeventmonitoringreminder > ~/scriptlogs/monshiftschedoutput.txt 2>&1
@hourly ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/queryserverinfo.py sendserveralert > ~/scriptlogs/serveralertoutput.txt 2>&1
# 0 8 8-14,21-28 * 5 ~/anaconda2/bin/python ~/Desktop/Senslope\ Server/queryserverinfo.py getnonreportingsites > ~/scriptlogs/getnonreportingsites.txt 2>&1


# */5 * * * * sudo ip route flush cache

